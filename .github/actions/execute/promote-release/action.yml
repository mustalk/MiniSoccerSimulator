name: 'Promote release'
description: 'Promotes a release with rebase & merge with GPG signing. | Copyright 2024 MusTalK (https://github.com/mustalk)'

inputs:
  release-branch:
    description: 'The release branch to rebase.'
    required: true
    default: 'release'
  main-branch:
    description: 'The main branch to rebase onto.'
    required: true
    default: 'main'
  remote-name:
    description: 'The remote name to use for fetch/push.'
    required: true
    default: 'origin'
  gpg-key:
    description: 'The GPG private key for signing commits.'
    required: true
  gpg-passphrase:
    description: 'The passphrase for GPG signing.'
    required: true
  github-repository:
    description: 'GitHub repository'
    required: true
  changelog-file-path:
    description: 'Path to the CHANGELOG.md file.'
    required: true
  gradle-file-path:
    description: 'Path to the Gradle file.'
    required: true

runs:
  using: 'composite'
  steps:
    # Initialize default status to skipped, so we can check if the script has been executed successfully or not in the workflow.
    - name: Initialize default action status
      run: |
        echo "PROMOTE_RELEASE_STATUS=skipped" >>"$GITHUB_ENV"
        echo "PROMOTE_RELEASE_MESSAGE='Promote release step was skipped.'" >>"$GITHUB_ENV"
      shell: bash

    # Grants execute permissions to all shell scripts.
    - name: Grant Execute Permission
      run: |
        git config --global core.filemode false
        chmod +x .github/scripts/utils/helpers/grant-exec-perms.sh
        .github/scripts/utils/helpers/grant-exec-perms.sh
      shell: bash

    # Runs the GPG setup script with the GPG private key from inputs.
    - name: Setup GPG
      run: .github/scripts/gpg-signing/setup.sh
      shell: bash
      env:
        BOT_GPG_PKEY: ${{ inputs.gpg-key }}
        GPG_PASSPHRASE: ${{ inputs.gpg-passphrase }}

    # Construct DIFF_EXCLUDE_FILES dynamically (Pipe-separated list of files to be excluded from the diff check after the semantic release run)
    - name: Construct DIFF_EXCLUDE_FILES variable
      id: construct-exclude-files
      run: echo "DIFF_EXCLUDE_FILES=${{ inputs.changelog-file-path }}|${{ inputs.gradle-file-path }}" >>"$GITHUB_ENV"
      shell: bash
      # Documentation: Constructs the DIFF_EXCLUDE_FILES variable by combining the changelog-file-path
      # and gradle-file-path into a pipe-separated string for exclusion in diff checks.

    # Runs the promote-release script if previous steps succeeded,
    # using provided branch names and GPG passphrase for signing.
    - name: Rebase release onto main
      if: success()
      run: .github/scripts/release/auto/promote-release.sh
      shell: bash
      env:
        GITHUB_REPOSITORY: ${{ inputs.github-repository }}
        RELEASE_BRANCH: ${{ inputs.release-branch }}
        MAIN_BRANCH: ${{ inputs.main-branch }}
        REMOTE_NAME: ${{ inputs.remote-name }}
        DIFF_EXCLUDE_FILES: ${{ env.DIFF_EXCLUDE_FILES }}

    # Runs the GPG cleanup script to remove the GPG agent and key.
    - name: Cleanup GPG
      if: always()
      run: .github/scripts/gpg-signing/cleanup.sh
      shell: bash
